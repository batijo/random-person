version: '3'

networks: 
  internal:
    external: false
  web:
    external: true

services: 
  app:
    container_name: ${APP_CONTAINER_NAME}
    image: batijo/random-person:${RP_VERSION}
    restart: unless-stopped
    environment: 
      - RP_DB_HOST=database
      - RP_DB_NAME=${DB_NAME}
      - RP_DB_USER=${DB_USER}
      - RP_DB_PASSWORD=${DB_PASSWORD}
      - RP_DB_PORT=${DB_PORT}
      - RP_PORT=${RP_PORT}
      - RP_VERSION=${RP_VERSION}
    env_file:
      - ./config/.env
    volumes:
      - ./config:/src/config
    networks: 
      - internal
    depends_on: 
      - database
    
  frontend:
    container_name: ${APP_GUI_NAME}
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    networks: 
      - internal
    depends_on: 
      - app   

  database:
    container_name: ${DATABASE_CONTAINER_NAME}
    image: postgres:alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSRGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - internal
  
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $HOME/.docker/config.json:/config.json
    command: --interval 30

  nginx:
    container_name: nginx
    image: jonasal/nginx-certbot:2.2.0-nginx1.21.0-alpine
    restart: unless-stopped
    environment:
      - CERTBOT_EMAIL
      - STAGING
      - DHPARAM_SIZE
      - RSA_KEY_SIZE
      - RENEWAL_INTERVAL
      - DEBUG
    env_file:
      - ./nginx/.env
    ports:
      - 80:80
      - 443:443
    volumes:
      - nginx_secrets:/etc/letsencrypt
      - ./nginx/user_conf.d:/etc/nginx/user_conf.d
      - ./frontend/dist:/www/static/frontend
    networks: 
      - internal
      - web
    depends_on:
      - app
      - frontend

volumes:
  nginx_secrets: